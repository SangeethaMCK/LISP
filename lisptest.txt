const tests = [
  {
    input: "(+ 1 2 3)",
    output: 6,
  },
  {
    input: "(begin (define r 10) (* pi (* r r)))",
    output: Math.PI * 100,
  },
  {
    input: "(define circle-area (lambda (r) (* 3.14 (* r r))))",
    output: "function",
  },
  {
    input: "(circle-area 5)",
    output: 78.5,
  },

  {
    input: "(define fact (lambda (n) (if (<= n 1) 1 (* n (fact (- n 1))))))",
    output: "function",
  },
  {
    input: "(fact 10)",
    output: 3628800,
  },

  {
    input: "(circle-area (fact 10))",
    output: 41348114841600,
  },

  {
    input: "(define define 10)",
    output: 10,
  },

  {
    input: "()",
    output: "()",
  },
  {
    input: "(",
    output: null,
  },
  {
    input: "(list 1 2 3 4 5 )",
    output: [1, 2, 3, 4, 5],
  },
  
  {
    input: "(define twice (lambda (x) (* 2 x)))",
    output: "function",
  },

  ,
  {
    input: "(twice 5)",
    output: 10,
  },

  {
    input: "(define repeat (lambda (f) (lambda (x) (f (f x)))))",
    output: "function",
  },

  {
    input: "((repeat twice) 10)",
    output: 40,
  },

  {
    input: "((repeat (repeat twice)) 10)",
    output: 160,
  },

  {
    input: "((repeat (repeat (repeat twice))) 10)",
    output: 2560,
  },

  {
    input: "((repeat (repeat (repeat (repeat twice)))) 10)",
    output: 655360,
  },

  {
    input: "(define a 5)",
    output: 5,
  },

  {
    input: "(set! a 8)",
    output: 8,
  },

  {
    input: "(quote (a b c))",
    output: "(a b c)",
  },

  {
    input: "(- 1)",
    output: -1,
  },

  {
    input: "(-1)",
    output: null,
  },

  {
    input: "(if (> (* 11 11) 120) (* 7 6) oops)",
    output: 42,
  },

  {
    input: "(begin (define r 20) (define l ((if (< 4 5) + -) r r)) (* r l))",
    output: 800,
  },

  {
    input: "(define if 60)",
    output: 60,
  },

  {
    input: "if",
    output: 60,
  },
  {
    input: "(+ 3 4)(* 2 3)",
    output: [7, 6],
  },
  {
    input: "()(* 2 3)",
    output: ["()", 6],
  },
  {
    input: "((if (< 5 4) + -) (+ 45 3)) (- 45 3))",
    output: [-48, [42, { error: "syntax error extra ')'" }]],
  },
  {
    input: "defined 4",
    output: null,
  },
  {
    input: "(quote (a b c)))",
    output: ["(a b c)", { error: "syntax error extra ')'" }],
  },
  {
    input: '"this is a string"',
    output: "this is a string",
  },
  {
    input: '(define a "kjk")',
    output: "kjk",
  },
  {
    input: "(quote (+ 1 1))",
    output: "(+ 1 1)",
  },
  {
    input: "(begin (define x 2 ) (+ x 1) (set! x 4) (+ x 1))",
    output: 5,
  },
  {
    input: "(begin (define area (lambda (l b) (* l b))) (area 2 3))",
    output: 6,
  },
  {
    input:
      "(begin (define circle-area (lambda (r) (* pi (* r r)))) (circle-area 10))",
    output: Math.PI * 100,
  },
  {
    input: "(define x (+ 5 5))",
    output: 10,
  },
  {
    input: "( + ( + ( + 9 ( + 2 2)) 2) ( - 3 4) )",
    output: 14,
  },
  {
    input: "(begin (define r 1 ) (set! s 2))",
    output: null,
  },
];
